#!/bin/bash

lib=$(dirname $0)/../lib/std.shlib; [ -f ${lib} ] && . ${lib} || { echo "${lib} not found" 1>&2; exit 1; }
lib=$(dirname $0)/../lib/ec2.shlib; [ -f ${lib} ] && . ${lib} || { echo "${lib} not found" 1>&2; exit 1; }
lib=$(dirname $0)/lib/lifecycle.shlib; [ -f ${lib} ] && . ${lib}

help=false
mode="start"
args=""

function usage()
{
cat <<EOF

$(echo ${mode:0:1} | tr '[:lower:]' '[:upper:]')${mode:1}s the specified instances.

Usage:

    ${mode} <instance-name|instance-id> [instance-name|instance-id ...]

Instance names and instance IDs can be mixed, the names will be correctly resolved to instance IDs.

EOF
exit 0
}

function main()
{
    process-common-arguments $@

    debug "$(basename $0) command line arguments: $@"

    local mode=$(basename $0)

    if [ "${mode}" = "start" -o "${mode}" = "stop" -o "${mode}" = "terminate" ]; then
        debug "mode: ${mode}"
    else
        fail "unknown or unsupported mode: '${mode}'"
    fi

    ${help} && usage;

    local ids

    ids=$(to-ids ${args}) || { exit 1; }

    info "$(to-ing ${mode}) ${ids} ..."

    local command="ec2-${mode}-instances ${ids}"

    ${command} || fail "failed to ${mode}"

}

main $@


