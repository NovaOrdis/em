#!/bin/bash

lib=$(dirname $0)/../lib/std.shlib; [ -f ${lib} ] && . ${lib} || { echo "${lib} not found" 1>&2; exit 1; }
lib=$(dirname $0)/../lib/linux.shlib; [ -f ${lib} ] && . ${lib} || { echo "${lib} not found" 1>&2; exit 1; }
lib=$(dirname $0)/lib/overlays.shlib; [ -f ${lib} ] && . ${lib} || { echo "${lib} not found" 1>&2; exit 1; }
lib=$(dirname $0)/lib/$(basename $0).shlib; [ -f ${lib} ] && . ${lib}

#
# dependencies
#

# NONE
# $(dirname $0)/environment-hostname $@

#
# The first overlay do deploy, and a dependency to pretty much everything else. It includes
# * setting the hostname
# * setting the NFS client
# ...

#
# overlay
#

process-overlay-arguments $@
overlay-preconditions
is-overlay-applied && { info "$(basename $0) overlay already applied"; exit 0; }

set-hostname ${name} && info "hostname successfully configured" || debug "hostname already set"

install-package zip
install-package unzip

setup-user-environment root
setup-user-environment ec2-user

# NFS

nfs_server_name=$(get-nfs-server-name ${nfs_server_ip}) || exit 1
if [ "${nfs_server_name}" = "" ]; then
    setup-nfs-server-identity ${nfs_server_ip} && info "NFS server identity successfully configured" || debug "NFS server identity already configured"
    nfs_server_name=$(get-nfs-server-name ${nfs_server_ip})
fi

[ "${nfs_server_name}" = "" ] && fail "failed to get the NFS server name after the identity was set up"

setup-nfs-client ${name} ${nfs_server_ip} ${nfs_server_name} && info "NFS client successfully configured" || info "NFS client already setup"

# all these below require NFS

install-authorized-keys





