#!/bin/bash

lib=$(dirname $0)/../lib/std.shlib; [ -f ${lib} ] && . ${lib} || { echo "${lib} not found" 1>&2; exit 1; }
lib=$(dirname $0)/../lib/em.shlib; [ -f ${lib} ] && . ${lib} || { echo "${lib} not found" 1>&2; exit 1; }
lib=$(dirname $0)/../lib/ec2.shlib; [ -f ${lib} ] && . ${lib} || { echo "${lib} not found" 1>&2; exit 1; }
lib=$(dirname $0)/../lib/linux.shlib; [ -f ${lib} ] && . ${lib} || { echo "${lib} not found" 1>&2; exit 1; }
lib=$(dirname $0)/lib/overlays.shlib; [ -f ${lib} ] && . ${lib} || { echo "${lib} not found" 1>&2; exit 1; }
lib=$(dirname $0)/lib/jboss.shlib; [ -f ${lib} ] && . ${lib} || { echo "${lib} not found" 1>&2; exit 1; }
lib=$(dirname $0)/lib/$(basename $0).shlib; [ -f ${lib} ] && . ${lib}

#
# JBoss Standalone node overlay
#

# mode - can be 'standalone' or 'domain'
# JBOSS_DISTRIBUTION - can be 'wildfly', 'eap', 'jdg'
JBOSS_DISTRIBUTION=""

#
# dependencies
#

$(dirname $0)/java $@

#
# overlay
#

[ -z "${SUBORDINATE_HOST_CONTROLLER}" -a -z "${DOMAIN_CONTROLLER}" ] && mode="standalone" || mode="domain"

process-overlay-arguments $@
overlay-preconditions

# figures out and sets JBOSS_DISTRIBUTION
install-binaries

update-user-environment-for-jboss root ${mode} ${JBOSS_DISTRIBUTION}
update-user-environment-for-jboss ec2-user ${mode} ${JBOSS_DISTRIBUTION}
add-a-management-user admin admin123
configure-public-interface $(get-primary-ip)

if [ ${mode} = "standalone" ]; then
    profile=$(extract-from-overlay-args "profile" ${args}) # it's OK if it is empty
    configure-jboss-to-start-at-boot "standalone" ${JBOSS_DISTRIBUTION} ${profile}
    archive-irrelevant-standalone-files ${profile}
fi

exit 0






