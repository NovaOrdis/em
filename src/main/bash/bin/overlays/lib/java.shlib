#!/bin/bash

#function update-bashrc-with-java-information
#{
#    local user=$1
#    local java_home=$2
#
#    debug "updating .bashrc with java information ..."
#
#    [ "${user}" = "" ] && { echo "'user' not provided" 1>&2; exit 1; }
#    [ "${java_home}" = "" ] && { echo "'java_home' not provided" 1>&2; exit 1; }
#    [ -d "${java_home}" ] || { echo "'java_home' ${java_home} does not exist" 1>&2; exit 1; }
#    [ -d "${java_home}/bin" ] || { echo "'java_home'/bin ${java_home}/bin does not exist" 1>&2; exit 1; }
#
#    local bashrc_file="$(get-home-dir ${user})/.bashrc"
#
#    if ! grep -q "export JAVA_HOME=${java_home}" ${bashrc_file}; then
#        echo "" >> ${bashrc_file}
#        echo "export JAVA_HOME=${java_home}" >> ${bashrc_file}
#        echo "export PATH=\${JAVA_HOME}/bin:\${PATH}" >> ${bashrc_file}
#        echo "java information configured in ${bashrc_file}"
#    fi
#}

# return 0 if the overlay was applied successfully and there is no need to apply it, 1 otherwise
function is-overlay-applied()
{
    debug "checking whether java was installed ..."

    local user
    for user in root ec2-user; do

        debug "checking whether ${user}'s environment was updated for java ..."
    done

    return 1
}

function install-java()
{
    debug-arguments $@
}

function update-user-environment-for-java()
{
    debug-arguments $@

    local user=$1
    [ "${user}" = "" ] && fail "${FUNCNAME[0]}: 'name' not provided"
}
