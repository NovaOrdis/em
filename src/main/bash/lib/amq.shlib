#!/bin/bash
#
# AM-Q Installation
#
# Global variables
#
#       debug_off=true|false
#
#       dry_run=true|false
#
#

# return the absolute path of the sole A-MQ directory, or empty string if no A-MQ directory
# is found, or fail if more than one A-MQ directory is found
function get_amq_dir
{
    local parent=$1

    [ "${parent}" = "" ] && { echo "'parent' directory not specified" 1>&2; exit 1; }
    [ -d ${parent} ] || { echo "'parent' ${parent} is not a directory" 1>&2; exit 1; }

    local amq_dir

    for i in $(ls -d ${parent}/*); do
        if [ -d ${i} ]; then
            local name
            name=$(basename ${i})
            name=${name:0:10}
            if [ "${name}" = "jboss-a-mq" ]; then
                [ "${amq_dir}" != "" ] && { echo "more than one A-MQ directory exist in ${parent}: ${amq_dir}, ${i}" 1>&2; exit 1; }
                amq_dir=${i}
            fi
        fi
    done

    echo ${amq_dir}
}

function install_data_content
{
    if [ ! -f /data/bin/ec2-host ]; then
        [ -f $(dirname $0)/ec2-host ] || { echo "$(dirname $0)/ec2-host not found, make sure to upload it" 1>&2; exit 1; }
        cp $(dirname $0)/ec2-host /data/bin
        chmod a+x /data/bin/ec2-host
        echo "/data/bin/ec2-host deployed"
    fi

    if [ ! -f /data/archive/${java_archive_file} ]; then
        [ -f $(dirname $0)/${java_archive_file} ] || { echo "$(dirname $0)/${java_archive_file} not found, make sure to upload it" 1>&2; exit 1; }
        cp $(dirname $0)/${java_archive_file} /data/archive
        echo "/data/archive/${java_archive_file} deployed"
    fi

    if [ ! -f /data/archive/${amq_archive_file} ]; then
        [ -f $(dirname $0)/${amq_archive_file} ] || { echo "$(dirname $0)/${amq_archive_file} not found, make sure to upload it" 1>&2; exit 1; }
        cp $(dirname $0)/${amq_archive_file} /data/archive
        echo "/data/archive/${amq_archive_file} deployed"
    fi
}

function install_amq
{
    logical_id=$1
    [ "${logical_id}" = "" ] && { echo "the logical id of this VM was not specified" 1>&2; exit 1; }

    [ -h /opt/a-mq ] && return 0; # A-MQ already isntalled

    local archive_dir=/nfs/f01/archive
    [ -d ${archive_dir} ] || { echo "${archive_dir} not a directory, was the NFS client activated?" 1>&2; exit 1; }

    local amq_archive_path=${archive_dir}/${amq_archive_file}
    [ -f ${amq_archive_path} ] || { echo "A-MQ archive ${amq_archive_path} does not exist" 1>&2; exit 1; }

    (cd /opt; unzip -q ${amq_archive_path}) && echo "extracted A-MQ into /opt" || { echo "failed to extract A-MQ" 1>&2; exit 1; }

    amq_dir=$(get_amq_dir /opt)

    (cd /opt; ln -s ${amq_dir} a-mq) && echo "linked ${amq_dir} to /opt/a-mq"

    # update ec2-user's .bashrc

    if ! grep -q "export AMQ_HOME=/opt/a-mq" ~ec2-user/.bashrc; then
        echo "export AMQ_HOME=/opt/a-mq" >> ~ec2-user/.bashrc
        echo "alias amq='cd \${AMQ_HOME}'" >> ~ec2-user/.bashrc
        echo "alias amqb='cd \${AMQ_HOME}/bin'" >> ~ec2-user/.bashrc
        echo "alias amql='cd \${AMQ_HOME}/data/log'" >> ~ec2-user/.bashrc
        echo "alias amqc='cd \${AMQ_HOME}/etc'" >> ~ec2-user/.bashrc
        echo "alias amq-start='\${AMQ_HOME}/bin/start'" >> ~ec2-user/.bashrc
        echo "alias amq-stop='\${AMQ_HOME}/bin/stop'" >> ~ec2-user/.bashrc
        echo "" >> ~ec2-user/.bashrc
        echo "updated ~ec2-user/.bashrc with A-MQ configuration"
    fi

    # update permissions
    chgrp ec2-user /opt/a-mq/ && echo "chgrp ec2-user /opt/a-mq/"
    chmod g+w /opt/a-mq/ && echo "chmod g+w /opt/a-mq/"
    chgrp -R ec2-user /opt/a-mq/data && echo "chgrp -R ec2-user /opt/a-mq/data"
    chmod -R g+w /opt/a-mq/data && echo "chmod -R g+w /opt/a-mq/data"
    chgrp -R ec2-user /opt/a-mq/etc && echo "chgrp -R ec2-user /opt/a-mq/etc"
    chmod -R g+w /opt/a-mq/etc && echo "chmod -R g+w /opt/a-mq/etc"

    # security
    local f

    f=/opt/a-mq/etc/users.properties

    if grep -q "^#admin=admin,admin$" ${f}; then
        cat ${f} | sed -e 's/^#admin=admin,admin$/admin=admin123,admin/' > ./.tmp.txt || { echo "" 1>&2; exit 1; }
        mv ./.tmp.txt ${f}
        chgrp ec2-user ${f}
        chmod g+w ${f}
        echo "updated A-MQ security credentials in ${f}"
    fi

    f=/opt/a-mq/etc/system.properties

    if grep -q "^#activemq.jmx.user=admin$" ${f}; then
        cat ${f} | sed \
            -e 's/^#activemq.jmx.user=admin$/activemq.jmx.user=admin/' \
            -e 's/^#activemq.jmx.password=.*$/activemq.jmx.password=admin123/' > ./.tmp.txt || { echo "" 1>&2; exit 1; }
        mv ./.tmp.txt ${f}
        chgrp ec2-user ${f}
        chmod g+w ${f}
        echo "updated A-MQ security credentials in ${f}"
    fi

    # broker name

    f=/opt/a-mq/etc/org.fusesource.mq.fabric.server-default.cfg

    if grep -q "^broker-name=amq$" ${f}; then
        cat ${f} | sed -e 's/^broker-name=amq$/broker-name='${logical_id}'/' > ./.tmp.txt || { echo "" 1>&2; exit 1; }
        mv ./.tmp.txt ${f}
        chgrp ec2-user ${f}
        chmod g+w ${f}
        echo "updated broker-name to ${logical_id} in ${f}"
    fi
}


