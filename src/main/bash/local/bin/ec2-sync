#!/bin/bash

[ -f $(dirname $0)/ec2.shlib ] && . $(dirname $0)/ec2.shlib || { echo "$(dirname $0)/ec2.shlib not found" 1>&2; exit 1; }

function display_help()
{
cat <<EOF

The script queries the current Amazon EC2 region \$EC2_URL (${EC2_URL}),
pulls the current public IP addresses associated with running instance, updates /etc/hosts
with the latest public IP values and creates the required login symbolic links if necessary.

EOF
}

#
# make the login links if necessary
#
function make_login_links()
{
    local name_colon_public_ip_space_separated_list=$1 # example "f01:1.1.1.1 f02:2.2.2.2"

    for i in ${name_colon_public_ip_space_separated_list}; do
        local name=${i%:*}

        if [ ! -h ~/bin/ec2/${name} ]; then
            local ec2_ssh
            ec2_ssh=$(dirname $0)/ec2-ssh
            # make sure it's an absolute path
            [ ${ec2_ssh:0:1} = "/" ] || fail "${ec2_ssh} is not an absolute path, TODO: improve the script to determine the absolute path"
            [ -x ${ec2_ssh} ] || fail "${ec2_ssh} does not exist or is not executable"
            debug "linking ${ec2_ssh} as ~/bin/ec2/${name}"
            (cd ~/bin/ec2/; ln -s ${ec2_ssh} ${name}) && info "${name} link created"
        fi
    done
}

function main()
{
    process_common_options $@

    local name_and_public_ip_for_running_instances;

    name_and_public_ip_for_running_instances=$(ec2-describe-instances | $(dirname $0)/em-java-launcher ${debug_arg} Ec2DescribeInstancesParser --filter state=running --list name:public-ip) || { exit 1; }

    debug "name_and_public_ip_for_running_instances: \"${name_and_public_ip_for_running_instances}\""

    if [ "${name_and_public_ip_for_running_instances}" = "" ]; then
        info "no running hosts"
    else
        update_etc_hosts "${name_and_public_ip_for_running_instances}"
        make_login_links "${name_and_public_ip_for_running_instances}"
    fi
}

main $@